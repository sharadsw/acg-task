{"version":3,"sources":["components/PersonForm.js","components/PersonTable.js","services/personService.js","index.js"],"names":["PersonForm","fname","lname","handleFname","handleLname","handleSubmit","handleCancel","className","type","value","onChange","onClick","Person","handleSelect","handleDelete","PersonTable","persons","map","p","id","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","setPersons","setFname","setLname","updateId","setUpdateId","useEffect","personService","result","cleanupForm","event","target","catch","error","alert","concat","window","person","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f55e738.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ fname, lname, handleFname, handleLname, handleSubmit, handleCancel }) => {\n\n  return (\n    <div className=\"container m-6\">\n      <div className=\"field\">\n        <label className=\"label\">First Name</label>\n        <div className=\"control\">\n          <input className=\"input\" type=\"text\" value={fname} onChange={handleFname} />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">Last Name</label>\n        <div className=\"control\">\n          <input className=\"input\" type=\"text\" value={lname} onChange={handleLname} />\n        </div>\n      </div>\n\n      <div className=\"field is-grouped\">\n        <p className=\"control\">\n          <button className=\"button is-primary\" onClick={handleSubmit}>\n            Save\n          </button>\n        </p>\n        <p className=\"control\">\n          <button className=\"button is-light\" onClick={handleCancel}>\n            Clear\n          </button>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ fname, lname, handleSelect, handleDelete }) => {\n\n  return (\n    <tr>\n      <td>{fname}</td>\n      <td>{lname}</td>\n      <td>\n        <div className=\"field is-grouped\">\n          <p className=\"control\">\n            <button className=\"button is-link\" onClick={handleSelect}>\n              Select\n            </button>\n          </p>\n          <p className=\"control\">\n            <button className=\"button is-link is-light\" onClick={handleDelete}>\n              Delete\n            </button>\n          </p>\n        </div>\n      </td>\n    </tr>\n  )\n}\n\nconst PersonTable = ({ persons, handleSelect, handleDelete }) => {\n\n  return (\n    <div className=\"container m-6\">\n      <table className=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {persons.map(p => <Person key={p.id} fname={p.fname} lname={p.lname}\n                                    handleSelect={() => handleSelect(p)}\n                                    handleDelete={() => handleDelete(p)} />)}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default PersonTable","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newPerson => {\n  return axios.post(baseUrl, newPerson).then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.min.css'\n\nimport PersonForm from './components/PersonForm'\nimport PersonTable from './components/PersonTable'\n\nimport personService from './services/personService'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [fname, setFname] = useState('')\n  const [lname, setLname] = useState('')\n\n  const [updateId, setUpdateId] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(result => {\n        setPersons(result)\n      })\n  }, [])\n\n  const cleanupForm = () => {\n    setFname('')\n    setLname('')\n    setUpdateId(null)\n  }\n\n  const handleFname = (event) => {\n    setFname(event.target.value)\n  }\n\n  const handleLname = (event) => {\n    setLname(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    if (fname === '' || lname === '') {\n      window.alert(\"First name or last name cannot be empty\")\n      return\n    }\n    const newPerson = {\n      fname: fname,\n      lname: lname\n    }\n    if (updateId) {\n      personService.update(updateId, newPerson)\n        .then(result => {\n          setPersons(persons.map(p => p.id === result.id ? result : p))\n        })\n        .catch(error => {\n          alert(\"This person has already been deleted from the database\")\n        })\n      cleanupForm()\n    } else {\n      personService.create(newPerson)\n        .then(result => {\n          setPersons(persons.concat(result))\n          cleanupForm()\n        })\n    }\n  }\n\n  const handleCancel = (event) => {\n    cleanupForm()\n  }\n\n  const handleSelect = (person) => {\n    setFname(person.fname)\n    setLname(person.lname)\n    setUpdateId(person.id)\n  }\n\n  const handleDelete = (person) => {\n    personService.remove(person.id)\n      .then(result => {\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n  }\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <PersonForm\n          fname={fname}\n          lname={lname}\n          handleFname={handleFname}\n          handleLname={handleLname}\n          handleSubmit={handleSubmit}\n          handleCancel={handleCancel} />\n      </div>\n      <div className=\"column\">\n        <PersonTable\n          persons={persons}\n          handleSelect={handleSelect}\n          handleDelete={handleDelete} />\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}